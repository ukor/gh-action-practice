
name: output (2.yml)

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  job1:
    runs-on: ubuntu-latest
    outputs:
      commitSHAs: ${{ steps.getCommitSHAs.outputs.commitSHAs }}
      starts_commit_sha: ${{ steps.getCommitSHAs.outputs.start_commit }}
      end_commit_sha: ${{ steps.getCommitSHAs.outputs.end_commit }}
    steps:
      - uses: actions/checkout@v4
        with: 
          fetch-depth: 0
      - name: Github context
        id: getGithubContext
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: |
          echo Add other actions to build,
          echo "$GITHUB_CONTEXT"
          echo "$GITHUB_WORKSPACE"

      - id: getCommitSHAs
        name: Get Commit SHA 
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
          BEFORE_PR_SHA: ${{ github.event.before }}
          AFTER_PR_SHA: ${{ github.event.after }}
        run: |
          echo "get start and end SHA",
          
          echo "----------"

          # Exit immediately if a command exits with a non-zero status.
          set -o errexit
          
          # Treat unset variables as an error when substituting.
          # set -o nounset
          
          # The exit status of a pipeline is the status of the last command to exit with a non-zero status.
          set -o pipefail

          git --version
          
          # Declare the associative array
          declare -A commitSHa
          
          # Replace these with your actual commit SHAs
          start_commit=$(git rev-parse --short "$BEFORE_PR_SHA")
          end_commit=$(git rev-parse --short "$AFTER_PR_SHA")

          echo "start_commit=$start_commit" >> "$GITHUB_OUTPUT"
          echo "end_commit=$end_commit" >> "$GITHUB_OUTPUT"

          echo "start SHA = $start_commit" " end SHA = $end_commit"

          commitSHa["start"]="$start_commit"
          commitSHa["end"]="$end_commit"

          # this does not work
          echo "commitSHAs=$commitSHa" >> "$GITHUB_OUTPUT"
          
  job2:
    runs-on: ubuntu-latest
    needs: [job1]
    steps:
        - name: log output
            # Will show
            # {
            #     "starts_commit_sha": "6838b27",
            #     "end_commit_sha": "ae79487"
            # }
          run: echo '${{ toJSON(needs.job1.outputs) }}'
  job3:
    runs-on: ubuntu-latest
    needs: [job1]
    steps:
        - name: log output
          env:
            START_COMMIT: ${{needs.job1.outputs.starts_commit_sha}}
            END_COMMIT: ${{needs.job1.outputs.end_commit_sha}}
          run: |
            echo '${{ toJSON(needs.job1.outputs) }}'
            echo " start = $START_COMMIT"
            echo " end = $END_COMMIT"